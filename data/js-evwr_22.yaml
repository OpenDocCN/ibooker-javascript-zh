- en: Chapter 21\. Mobile Applications with React Native
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第21章：使用 React Native 的移动应用程序
- en: One day in the late 1980s I was shopping with my parents when I spotted a small
    portable television. It was a battery-powered square box, with an antenna, small
    speaker, and a tiny black-and-white screen. I was blown away by the possibility
    of watching Saturday morning cartoons *in my backyard*. Though I’d never own one,
    just knowing that such a device existed made me feel like I was living in a science-fiction
    future world. Little did I know that as an adult, I’d carry a device in my pocket
    that would allow me to not only watch *Masters of the Universe*, but also to access
    infinite information, listen to music, play games, take notes, take photos, summon
    a car, buy things, check the weather, and complete an infinite number of other
    tasks.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 上个世纪80年代末的一天，我和父母一起购物时发现了一台小型便携电视机。这是一种电池供电的方形盒子，配有天线、小扬声器和一个小黑白屏幕。我被能够在后院看星期六早晨卡通的可能性震撼了。虽然我永远不会拥有这样一种设备，但仅仅知道这种设备的存在让我感觉就像生活在一个科幻未来的世界中。小小的我没有意识到，作为一个成年人，我会随身携带一部设备，它不仅能让我观看《宇宙大师》，还能够访问无限的信息、听音乐、玩游戏、记笔记、拍照、召唤汽车、购物、查看天气，并完成无限其他任务。
- en: In 2007 Steve Jobs introduced the iPhone, saying “every once in a while a revolutionary
    product comes along that changes everything.” Sure, smartphones existed before
    2007, but it wasn’t until the rise of the iPhone (and subsequent rise of Android)
    that they were truly smart. In the intervening years, smartphone applications
    have evolved past the initial “anything goes” gold rush phase to be something
    that users demand quality from and have high expectations for. Today’s applications
    have high standards of functionality, interaction, and design. To add to the challenge,
    modern mobile application development is splintered across the Apple iOS and Android
    platforms, each using a different programming language and toolchain.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 2007年，史蒂夫·乔布斯推出了 iPhone，并说：“有时会出现一种革命性产品，改变一切。”的确，在2007年之前就已经存在智能手机，但要说他们是真正智能的，必须是从
    iPhone（及随后的 Android 的崛起）开始的。在随后的几年里，智能手机应用程序从最初的“任何事情都可以”淘金热阶段发展到用户要求质量和对其有高度期望的地步。今天的应用程序具有高功能性、互动性和设计标准。为了增加挑战，现代移动应用开发分散在
    Apple iOS 和 Android 平台上，每个平台使用不同的编程语言和工具链。
- en: You’ve probably already guessed it (it *is* in the book title), but JavaScript
    enables us as developers to write cross-platform mobile applications. In this
    chapter I’ll introduce the library that enables this, React Native, as well as
    the Expo tool chain. We’ll also clone the sample project code, which we’ll be
    building upon over the next few chapters.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经猜到（书名中有提到），JavaScript 使我们作为开发人员能够编写跨平台移动应用程序。在本章中，我将介绍启用这一点的库 React Native，以及
    Expo 工具链。我们还将克隆样例项目代码，我们将在接下来的几章中对此进行开发。
- en: What We’re Building
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们正在建设什么
- en: 'Over the next few chapters we’ll build a mobile client for our social note
    application, Notedly. The goal is to use JavaScript and web technologies to develop
    an application a user can install on their mobile device. We’ll be implementing
    a subset of features so as to avoid too much repetition from the web application
    chapters. Specifically, our application will:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几章中，我们将为我们的社交笔记应用程序 Notedly 构建一个移动客户端。目标是使用 JavaScript 和网络技术开发一个用户可以安装到其移动设备上的应用程序。我们将实施一部分功能，以避免在
    web 应用程序章节中太多重复。具体来说，我们的应用程序将：
- en: Work on both iOS and Android operating systems
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 iOS 和 Android 操作系统上工作
- en: Load a note feed and individual user notes from our GraphQL API
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从   从我们的 GraphQL API 加载笔记提要和用户个别笔记
- en: Use CSS and styled components for styling
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 CSS 和样式组件进行样式设置
- en: Perform standard and dynamic routing
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行标准和动态路由
- en: These features will provide a solid overview of the core concepts of developing
    a mobile application with React Native. Before we get started, let’s take a closer
    look at the technologies we will be using.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些功能将为开发具有 React Native 的移动应用程序的核心概念提供一个坚实的概述。在我们开始之前，让我们仔细看看我们将使用的技术。
- en: How We’re Going To Build This
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们将如何构建这个
- en: React Native is the core technology that we will be using to develop our application.
    React Native allows us to write applications in JavaScript, using React, and render
    them for the native mobile platform. This means that to users, there is no discernible
    difference between a React Native application and one written in the platform’s
    programming language. This is React Native’s key advantage over other popular
    web technology–based mobile frameworks, which traditionally wrapped a web view
    within an application shell. React Native has been used to develop apps by Facebook,
    Instagram, Bloomberg, Tesla, Skype, Walmart, Pinterest, and many others.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: React Native是我们将用来开发应用程序的核心技术。React Native允许我们使用React在JavaScript中编写应用程序，并为原生移动平台渲染它们。这意味着对用户来说，React
    Native应用程序与使用平台编程语言编写的应用程序没有明显的区别。这是React Native相对于传统上在应用程序外壳中包装Web视图的其他流行基于Web技术的移动框架的关键优势。Facebook、Instagram、Bloomberg、Tesla、Skype、Walmart、Pinterest等公司已经使用React
    Native开发应用程序。
- en: 'The second key piece of our application development workflow is Expo, a set
    of tools and services that simplify React Native development through really useful
    features such as on-device previews, application builds, and extending the core
    React Native library. Before getting started with our development, I recommend
    that you do the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序开发工作流程的第二个关键部分是Expo，它是一组通过非常有用的功能简化React Native开发的工具和服务，如设备预览、应用程序构建以及扩展核心React
    Native库。在开始我们的开发之前，我建议您执行以下操作：
- en: Visit [*expo.io*](https://expo.io) and create an Expo account.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[*expo.io*](https://expo.io)并创建Expo账户。
- en: Install the Expo command-line tools by typing **`npm install expo-cli`** **`--global`**
    into your terminal application.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在终端应用程序中输入**`npm install expo-cli`** **`--global`**来安装Expo命令行工具。
- en: Sign in to your Expo account locally by typing **`expo login`** in your terminal
    application.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在终端应用程序中键入**`expo login`**来本地登录到您的Expo账户。
- en: Install the Expo Client application for your mobile device. Links to the Expo
    Client iOS and Android app can be found at [*expo.io/tools*](https://expo.io/tools).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的移动设备安装Expo Client应用程序。Expo Client iOS和Android应用程序的链接可以在[*expo.io/tools*](https://expo.io/tools)找到。
- en: Sign in to your account in the Expo Client application.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Expo Client应用程序中登录您的账户。
- en: Finally, we’ll again use [Apollo Client](https://oreil.ly/xR62T) to interact
    with data from our GraphQL API. Apollo Client comprises a collection of open source
    tools for working with GraphQL.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将再次使用[Apollo Client](https://oreil.ly/xR62T)来与我们的GraphQL API的数据进行交互。Apollo
    Client是一组用于处理GraphQL的开源工具。
- en: Getting Started
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: 'Before we can start development, you’ll need to make a copy of the project
    starter files to your machine. The project’s [source code](https://github.com/javascripteverywhere/mobile)
    contains all of the scripts and references to third-party libraries that we will
    need to develop our application. To clone the code to your local machine, open
    the terminal, navigate to the directory where you keep your projects, and **`git
    clone`** the project repository. If you’ve worked through the API, web, and/or
    desktop chapters, you may also have already created a *notedly* directory to keep
    the project code organized:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始开发之前，您需要将项目起始文件复制到您的计算机上。项目的[source code](https://github.com/javascripteverywhere/mobile)包含我们开发应用所需的所有脚本和第三方库的引用。要将代码克隆到本地计算机，请打开终端，导航到您保存项目的目录，并**`git
    clone`**项目存储库。如果您已经完成了API、Web和/或桌面章节，可能已经创建了一个*notedly*目录来组织项目代码：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing Third-Party Dependencies
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装第三方依赖
- en: By making a copy of the book’s starter code and running `npm install` in the
    directory, you avoid having to again run `npm install` for any of the individual
    third-party dependencies.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 通过复制书籍起始代码并在目录中运行`npm install`，您可以避免为任何单独的第三方依赖再次运行`npm install`。
- en: 'The code is structured as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 代码结构如下：
- en: /src
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: /src
- en: This is the directory where you should perform your development as you follow
    along with the book.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您在跟着本书学习时应进行开发的目录。
- en: /solutions
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: /solutions
- en: This directory contains the solutions for each chapter. If you get stuck, these
    are available for you to consult.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此目录包含每章的解决方案。如果遇到困难，您可以查阅这些内容。
- en: /final
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: /final
- en: This directory contains the final working project.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此目录包含最终的工作项目。
- en: The remaining files and project setup match the standard output of the `expo-cli`
    React Native generator, which you can run by typing **`expo init`** in your terminal.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 其余文件和项目设置与 `expo-cli` React Native 生成器的标准输出匹配，您可以在终端中键入 **`expo init`** 来运行它。
- en: App.js?
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: App.js？
- en: Because of the way that Expo’s build chain works, the *App.js* file in the root
    of the project directory is typically the application’s point of entry. To standardize
    our mobile project with the code found in the rest of the book, the *App.js* file
    is used only as a reference to a */src/Main.js* file.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Expo 构建链的工作方式，项目目录根目录中的 *App.js* 文件通常是应用程序的入口点。为了使我们的移动项目与本书中的其余代码标准化，*App.js*
    文件仅用作对 */src/Main.js* 文件的引用。
- en: 'Now that we have the code on our local machines and our dependencies installed,
    let’s run the app. To start the application, in your terminal application, type
    the following:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在本地机器上有了代码并安装了依赖项，让我们运行应用程序。要启动应用程序，在您的终端应用程序中输入以下内容：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will open Expo’s “Metro Bundler” web application on a local port in our
    browser. From here, you can launch a local device simulator by clicking one of
    the “Run on…” links. You can also launch the application on any physical device
    with the Expo Client by scanning the QR code ([Figure 21-1](#metro_bundler)).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在我们的浏览器中打开 Expo 的“Metro Bundler” Web 应用程序的本地端口。从这里，您可以通过单击“Run on…”链接在本地设备模拟器上启动应用程序。您还可以通过扫描
    QR 码在任何物理设备上使用 Expo 客户端启动应用程序（参见 [图 21-1](#metro_bundler)）。
- en: '![A screenshot of Expo''s Metro Bundler application](assets/jsev_2101.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Expo 的 Metro Bundler 应用程序截图](assets/jsev_2101.png)'
- en: Figure 21-1\. Expo’s Metro Bundler after launching our application
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 21-1\. 启动应用程序后的 Expo Metro Bundler
- en: Installing Device Simulators
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装设备模拟器
- en: To run an iOS device simulator, you will need to download and install [Xcode](https://oreil.ly/bgde4)
    (macOS only). For Android, download [Android Studio](https://oreil.ly/bjqkn) and
    follow [Expo’s guide](https://oreil.ly/cUGsr) on setting up a device simulator.
    (See [Figure 21-2](#android_ios) for a comparison.) However, if you’re just getting
    started with mobile application development, I recommend starting with your own
    physical device.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行 iOS 设备模拟器，您需要下载并安装 [Xcode](https://oreil.ly/bgde4)（仅限 macOS）。对于 Android，请下载
    [Android Studio](https://oreil.ly/bjqkn) 并按照 [Expo 的指南](https://oreil.ly/cUGsr)
    设置设备模拟器（参见 [图 21-2](#android_ios) 进行比较）。不过，如果您刚开始进行移动应用程序开发，我建议从您自己的物理设备开始。
- en: '![A screenshot of iOS and Android device simulators](assets/jsev_2102.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![iOS 和 Android 设备模拟器的截图](assets/jsev_2102.png)'
- en: Figure 21-2\. Our application running side by side on iOS and Android device
    simulators
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 21-2\. 我们的应用程序在 iOS 和 Android 设备模拟器上并行运行
- en: If you’ve signed in to Expo from your computer’s terminal application as well
    as within the Expo Client application on your mobile device, you can open the
    application simply by opening the Expo Client application and clicking the Projects
    tab ([Figure 21-3](#handheld)).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已在计算机的终端应用程序中以及在移动设备上的 Expo 客户端应用程序中登录 Expo，您只需打开 Expo 客户端应用程序并点击项目选项卡即可打开应用程序（参见
    [图 21-3](#handheld)）。
- en: '![A photo of the application running on a physical device](assets/jsev_2103.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![应用程序在物理设备上运行的照片](assets/jsev_2103.png)'
- en: Figure 21-3\. With Expo Client, we can preview our application on a physical
    device
  id: totrans-46
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 21-3\. 使用 Expo 客户端，我们可以在物理设备上预览我们的应用程序。
- en: With the code cloned to your local machine and the ability to preview the application
    with Expo Client, you have everything in place to develop a mobile application.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当代码克隆到您的本地计算机并能够使用 Expo 客户端预览应用程序时，您已经具备了开发移动应用程序所需的一切条件。
- en: Conclusion
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This chapter introduced React Native and Expo. We cloned the sample project
    code, ran it locally, and previewed it on a physical device or simulator. React
    Native empowers web and JavaScript developers to build fully featured native mobile
    applications, using the skills and tools they are familiar with. Expo simplifies
    the toolchain and lowers the barrier to entry for native mobile development. With
    these two tools, novices can easily get started with mobile development and web-savvy
    teams can quickly introduce a mobile application development skillset. In the
    next chapter we’ll take a closer look at React Native’s capabilities and introduce
    both routes and styles to our app.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了React Native和Expo。我们克隆了示例项目代码，在本地运行并在物理设备或模拟器上预览了它。React Native使Web和JavaScript开发人员能够使用他们熟悉的技能和工具构建功能齐全的原生移动应用程序。Expo简化了工具链，并降低了原生移动开发的门槛。有了这两个工具，新手可以轻松开始移动开发，而擅长Web的团队可以快速引入移动应用开发技能集。在下一章中，我们将更详细地了解React
    Native的功能，并向我们的应用程序介绍路由和样式。
