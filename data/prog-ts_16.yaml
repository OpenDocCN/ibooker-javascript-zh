- en: Appendix C. Scoped Declarations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 C. 作用域声明
- en: TypeScript declarations have a rich set of behaviors needed to model types and
    values, and as in JavaScript, they can be overloaded in a variety of ways. This
    appendix covers two of these behaviors, summarizing which declarations generate
    types (and which generate values), and which declarations can be merged.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 声明具有多种行为，用于建模类型和值，与 JavaScript 类似，它们可以以各种方式重载。本附录涵盖了其中两种行为，总结了哪些声明生成类型（以及哪些生成值），以及哪些声明可以合并。
- en: Does It Generate a Type?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是否生成类型？
- en: Some TypeScript declarations create a type, some create a value, and some create
    both. See to [Table C-1](#generate-type-table) for a quick reference.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一些 TypeScript 声明创建类型，一些创建值，还有一些两者兼具。请参阅[表 C-1](#generate-type-table)进行快速参考。
- en: Table C-1\. Does the declaration generate a type?
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 表 C-1\. 声明是否生成类型？
- en: '| Keyword | Generates a type? | Generates a value? |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| 关键字 | 是否生成类型？ | 是否生成值？ |'
- en: '| --- | --- | --- |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `class` | Yes | Yes |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `class` | 是 | 是 |'
- en: '| `const`, `let`, `var` | No | Yes |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `const`, `let`, `var` | 否 | 是 |'
- en: '| `enum` | Yes | Yes |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `enum` | 是 | 是 |'
- en: '| `function` | No | Yes |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `function` | 否 | 是 |'
- en: '| `interface` | Yes | No |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `interface` | 是 | 否 |'
- en: '| `namespace` | No | Yes |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `namespace` | 否 | 是 |'
- en: '| `type` | Yes | No |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `type` | 是 | 否 |'
- en: Does It Merge?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是否合并？
- en: Declaration merging is a core TypeScript behavior. Take advantage of it to create
    richer APIs, better modularize your code, and make your code safer.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 声明合并是 TypeScript 的核心行为。利用它来创建更丰富的 API，更好地模块化您的代码，并使您的代码更安全。
- en: '[Table C-2](#declare-merge-table) is reprinted from [“Declaration Merging”](ch10.html#namespace-merging);
    it’s a handy reference for which kinds of declarations TypeScript will merge for
    you.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 C-2](#declare-merge-table) 重新引自[“声明合并”](ch10.html#namespace-merging)；这是一个便于参考的手册，指导哪些类型的声明
    TypeScript 将会为您合并。'
- en: Table C-2\. Can the declaration be merged?
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 表 C-2\. 声明是否可以合并？
- en: '|  |  |  |  |  |  | To |  |  |  |  |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '|  |  |  |  |  |  | 用 |  |  |  |  |'
- en: '|  |  | Value | Class | Enum | Function | Types alias | Interface | Namespace
    | Module |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 值 | 类 | 枚举 | 函数 | 类型别名 | 接口 | 命名空间 | 模块 |'
- en: '|  | Value | No | No | No | No | Yes | Yes | No |  —  |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '|  | 值 | 否 | 否 | 否 | 否 | 是 | 是 | 否 |  —  |'
- en: '|  | Class |  —  | No | No | No | No | Yes | Yes |  —  |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '|  | 类 |  —  | 否 | 否 | 否 | 否 | 是 | 是 |  —  |'
- en: '|  | Enum |  —  |  —  | Yes | No | No | No | Yes |  —  |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|  | 枚举 |  —  |  —  | 是 | 否 | 否 | 否 | 是 |  —  |'
- en: '| From | Function |  —  |  —  |  —  | No | Yes | Yes | Yes |  —  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 从 | 函数 |  —  |  —  |  —  | 否 | 是 | 是 | 是 |  —  |'
- en: '|  | Type alias |  —  |  —  |  —  |  —  | No | No | Yes |  —  |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '|  | 类型别名 |  —  |  —  |  —  |  —  | 否 | 否 | 是 |  —  |'
- en: '|  | Interface |  —  |  —  |  —  |  —  |  —  | Yes | Yes |  —  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '|  | 接口 |  —  |  —  |  —  |  —  |  —  | 是 | 是 |  —  |'
- en: '|  | Namespace |  —  |  —  |  —  |  —  |  —  |  —  | Yes |  —  |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|  | 命名空间 |  —  |  —  |  —  |  —  |  —  |  —  | 是 |  —  |'
- en: '|  | Module |  —  |  —  |  —  |  —  |  —  |  —  |  —  | Yes |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '|  | 模块 |  —  |  —  |  —  |  —  |  —  |  —  |  —  | 是 |'
