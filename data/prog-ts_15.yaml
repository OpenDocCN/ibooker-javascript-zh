- en: Appendix B. Type Utilities
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 B\. 类型工具
- en: TypeScript’s type utilities come bundled into its standard library. [Table B-1](#type-utility-table)
    enumerates all of the available utilities at the time of writing.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: TypeScript 的类型工具包含在其标准库中。在撰写本文时，[表格 B-1](#type-utility-table) 列举了所有可用的工具。
- en: See [*es5.d.ts*](http://bit.ly/2I0Ve2U) for an up-to-date reference.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [*es5.d.ts*](http://bit.ly/2I0Ve2U) 获取最新参考。
- en: Table B-1\. Type utilities
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 B-1\. 类型工具
- en: '| Type utility | Use it on | Description |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| 类型工具 | 使用对象 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `ConstructorParameters` | Class constructor types | A tuple of a class constructor’s
    parameter types |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| `ConstructorParameters` | 类构造函数类型 | 类构造函数参数类型的元组 |'
- en: '| `Exclude` | Union types | Exclude a type from another type |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `Exclude` | 联合类型 | 从另一个类型中排除某一类型 |'
- en: '| `Extract` | Union types | Select a subtype that’s assignable to another type
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `Extract` | 联合类型 | 选择一个可分配给另一类型的子类型 |'
- en: '| `InstanceType` | Class constructor types | The instance type you get from
    `new`-ing a class constructor |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `InstanceType` | 类构造函数类型 | 从类构造函数 `new` 实例化得到的实例类型 |'
- en: '| `NonNullable` | Nullable types | Exclude `null` and `undefined` from a type
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `NonNullable` | 可空类型 | 排除 `null` 和 `undefined` 从类型中 |'
- en: '| `Parameters` | Function types | A tuple of a function’s parameter types |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `Parameters` | 函数类型 | 函数参数类型的元组 |'
- en: '| `Partial` | Object types | Make all properties in an object optional |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `Partial` | 对象类型 | 使对象中所有属性可选 |'
- en: '| `Pick` | Object types | A subtype of an object type, with a subset of its
    keys |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `Pick` | 对象类型 | 对象类型的子类型，包含其键的子集 |'
- en: '| `Readonly` | Array, Object, and Tuple types | Make all properties in an object
    read-only, or make an array or tuple read-only |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `Readonly` | 数组、对象和元组类型 | 使对象中所有属性只读，或使数组或元组只读 |'
- en: '| `ReadonlyArray` | Any type | Make an immutable array of the given type |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `ReadonlyArray` | 任意类型 | 创建给定类型的不可变数组 |'
- en: '| `Record` | Object types | A map from a key type to a value type |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `Record` | 对象类型 | 从键类型到值类型的映射 |'
- en: '| `Required` | Object types | Make all properties in an object required |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `Required` | 对象类型 | 使对象中所有属性必填 |'
- en: '| `ReturnType` | Function types | A function’s return type |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `ReturnType` | 函数类型 | 函数的返回类型 |'
