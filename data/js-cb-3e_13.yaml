- en: Chapter 11\. Browser Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 章. 浏览器工具
- en: As a web developer, the browser is the window through which the world accesses
    your creations. It also provides helpful tooling for developing and testing your
    sites. It is a worthwhile investment to learn how to use your browser’s development
    tools so that you may better and more easily debug your code. In this chapter
    we’ll cover several useful features for debugging, profiling, and analyzing JavaScript.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Web 开发者，浏览器是世界访问您创作的窗口。 它还提供了有用的工具，用于开发和测试您的站点。 学习如何使用浏览器的开发工具是值得的投资，这样您可以更轻松地调试代码。
    在本章中，我们将介绍几个用于调试、性能分析和分析 JavaScript 的有用功能。
- en: For simplicity, all of the examples in this book will make use of Google Chrome’s
    Developer Tools (DevTools). At the time of writing, [Chrome’s usage makes up over
    65%](https://oreil.ly/QFZD9) of the global browser share. Most other browsers
    offer similar functionality. Mozilla’s [Firefox Developer Edition](https://oreil.ly/lJSel)
    is an excellent alternative with useful developer features.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 出于简化，本书中的所有示例都将使用 Google Chrome 的开发者工具（DevTools）。 在撰写本文时，[Chrome 的使用率超过了全球浏览器市场的
    65%](https://oreil.ly/QFZD9)。 大多数其他浏览器提供类似的功能。 Mozilla 的 [Firefox 开发者版](https://oreil.ly/lJSel)
    是一个具有有用开发者功能的优秀替代品。
- en: Debugging JavaScript
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试 JavaScript
- en: Problem
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You need to know the value of a variable at a specific point in your JavaScript
    code’s execution.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要知道 JavaScript 代码执行的特定点上变量的值。
- en: Solution
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use a breakpoint to inspect code values and types. When setting a breakpoint,
    the browser’s debugger will stop at the point of the breakpoint’s code execution
    and display each of the current values in scope. It is then possible to step through
    the code or allow the JavaScript to finish executing. [Figure 11-1](#breakpoint_fig)
    shows a screenshot of code paused on a breakpoint.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用断点检查代码的值和类型。 设置断点时，浏览器的调试器将在断点代码执行点停止，并显示每个当前范围内的值。 然后可以逐步执行代码或允许 JavaScript
    完成执行。 [图 11-1](#breakpoint_fig) 显示了在断点上暂停的代码屏幕截图。
- en: '![A screenshot of the Chrome debugger with a breakpoint set](assets/jsc3_1101.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Chrome 调试器设置断点的屏幕截图](assets/jsc3_1101.png)'
- en: Figure 11-1\. A screenshot of the Chrome debugger with a breakpoint set
  id: totrans-9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-1. 使用 Chrome 调试器设置断点的屏幕截图
- en: 'To set a breakpoint on a specific line of JavaScript code in Chrome’s Developer
    Tools:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Chrome 的开发者工具中的特定 JavaScript 代码行上设置断点：
- en: Open Chrome’s Developer Tools using Command-Option-C (Macintosh) or Control+Shift+C
    (Windows or Linux).
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Command-Option-C（Macintosh）或 Control+Shift+C（Windows 或 Linux） 打开 Chrome 的开发者工具。
- en: Click the DevTools **Sources** tab.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 DevTools **Sources** 选项卡。
- en: Select the JavaScript file from the file list.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从文件列表中选择 JavaScript 文件。
- en: Click the line number where you would like to set the breakpoint.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击要设置断点的行号。
- en: Execute the code by either interacting with the page or refreshing the browser
    window.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过与页面交互或刷新浏览器窗口来执行代码。
- en: Discussion
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: It is common practice to use `console.log` statements to identify values at
    specific points in code, but breakpoints offer more information and greater flexibility.
    As you become familiar with debugging in this manner, you’ll be able to more easily
    troubleshoot your browser-based JavaScript code.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `console.log` 语句在代码中特定点标识值是一种常见做法，但断点提供更多信息和更大的灵活性。 当您熟悉以这种方式调试时，您将能够更轻松地排除基于浏览器的
    JavaScript 代码中的问题。
- en: In addition to setting breakpoints in the browser’s user interface, it is also
    possible to set them with code by adding a `debugger` statement. Doing so will
    pause code execution at the point of the `debugger` statement.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在浏览器用户界面中设置断点之外，还可以通过添加 `debugger` 语句来使用代码设置断点。 这样做将在 `debugger` 语句的执行点暂停代码执行。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once the breakpoint has been reached, you are given several options as to how
    the JavaScript should be executed:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦到达断点，您将有几个选项可以执行 JavaScript 代码：
- en: Resume script execution
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复脚本执行
- en: Continue executing the code in full.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 继续完整地执行代码。
- en: Step over
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 跨过
- en: Execute a function without “stepping into it” to debug.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在不“步入”调试的情况下执行函数。
- en: Step into
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 进入
- en: Step into a function to debug it further.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 进入函数以进一步调试。
- en: Step out of
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 退出
- en: Execute the rest of the current function’s code.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 执行当前函数代码的其余部分。
- en: Step
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤
- en: Step to the next line of code.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 跳到下一行代码。
- en: These line-based breakpoints are only one type of breakpoint that can be set.
    In addition, it is possible to set breakpoints based on DOM changes, conditional
    values, event listeners, exceptions, and fetch/XHR requests. The use of breakpoints
    provides greater control over the JavaScript debugging experience.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基于行的断点只是可以设置的一种断点类型。此外，还可以基于DOM更改、条件值、事件监听器、异常和fetch/XHR请求设置断点。使用断点可以更好地控制JavaScript调试体验。
- en: Analyzing Runtime Performance
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析运行时性能
- en: Problem
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: The execution of your JavaScript code seems slow or buggy, but you are unsure
    of the source of the problem.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您的JavaScript代码执行速度似乎较慢或存在错误，但您不确定问题的根源。
- en: Solution
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use the browser developer tool’s Performance analysis to look for bottlenecks
    and CPU-intensive tasks in your code ([Figure 11-2](#jscb_1202)).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用浏览器开发者工具的性能分析来查找代码中的瓶颈和CPU密集型任务（见[图 11-2](#jscb_1202)）。
- en: 'To analyze JavaScript code performance in Chrome’s Developer Tools:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要分析Chrome开发者工具中的JavaScript代码性能：
- en: Open Chrome’s Developer Tools using Command-Option-C (Macintosh) or Control+Shift+C
    (Windows or Linux).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Chrome的开发者工具，使用Command-Option-C（Macintosh）或Control+Shift+C（Windows或Linux）。
- en: Click the DevTools **Performance** tab.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击DevTools的**性能**选项卡。
- en: Either click the **Record** button to interact with the page, or click the **Reload**
    button to see the performance metrics related to a new page load.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要么单击**记录**按钮与页面交互，或单击**重新加载**按钮查看与新页面加载相关的性能指标。
- en: Once Chrome completes the profile of the page, you will be presented with information
    that allows you to review potential performance bottlenecks.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Chrome完成页面的分析，您将获得允许查看潜在性能瓶颈的信息。
- en: '![A screenshot of the Chrome Performance tab](assets/jsc3_1102.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![Chrome性能选项卡的屏幕截图](assets/jsc3_1102.png)'
- en: Figure 11-2\. Chrome’s Performance tab
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-2\. Chrome的性能选项卡
- en: Discussion
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: The Chrome Performance tooling breaks down the browser’s rendering process for
    a page and presents it using a visual timeline, screenshots, and a summary chart
    (see [Figure 11-3](#jscb_1203)). Using this information allows you to look for
    places where performance is negatively affected.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome性能工具将分解页面的浏览器渲染过程，并使用视觉时间轴、截图和摘要图表进行展示（见[图 11-3](#jscb_1203)）。使用这些信息可以查找性能受到负面影响的地方。
- en: As a developer, you may have a high-end machine and a fast internet connection.
    One of the most useful features of browser performance tools is the ability to
    simulate a throttled CPU or internet connection. Doing so may allow you to spot
    performance issues that users will encounter, but may not be apparent to you.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，您可能拥有高端设备和快速互联网连接。浏览器性能工具最有用的功能之一是能够模拟受限的CPU或互联网连接。这样做可以帮助您发现用户可能遇到的性能问题，但这些问题可能对您不明显。
- en: '![A screenshot of the developer tools with throttled CPU and network connections
    enabled](assets/jsc3_1103.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![带有限制CPU和网络连接启用的开发者工具屏幕截图](assets/jsc3_1103.png)'
- en: Figure 11-3\. The Chrome Developer Performance tools allow you to throttle CPU
    and network connections
  id: totrans-48
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-3\. Chrome开发者工具性能工具允许您限制CPU和网络连接
- en: Reviewing performance data is an important step in ensuring a positive user
    experience. Good site performance has been shown to improve user retention rates
    and sales conversions. In [“Using Lighthouse to Measure Best Practices”](#lighthouse),
    we’ll cover how to further review potential performance issues.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 查看性能数据是确保用户体验良好的重要步骤。良好的网站性能已被证明可以提高用户保留率和销售转化率。在[“使用 Lighthouse 测量最佳实践”](#lighthouse)中，我们将介绍如何进一步审查潜在的性能问题。
- en: Identifying Unused JavaScript
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别未使用的JavaScript
- en: Problem
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: Your application’s performance is impacted by large JavaScript files.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您的应用性能受到大型JavaScript文件的影响。
- en: Solution
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use the Chrome Developer Tool’s Coverage feature to identify unused JavaScript
    ([Figure 11-4](#jscb_1204)).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Chrome开发者工具的Coverage功能来识别未使用的JavaScript（见[图 11-4](#jscb_1204)）。
- en: '![A screenshot of the results of Chrome''s coverage tool](assets/jsc3_1104.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![Chrome覆盖工具结果的屏幕截图](assets/jsc3_1104.png)'
- en: Figure 11-4\. Chrome’s Coverage tool
  id: totrans-56
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-4\. Chrome的Coverage工具
- en: 'To view unused JavaScript, access the Coverage tab:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看未使用的JavaScript，请访问Coverage标签页：
- en: Open Chrome’s Developer Tools using Command-Option-C (Macintosh) or Control+Shift+C
    (Windows or Linux).
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Chrome的开发者工具，使用Command-Option-C（Macintosh）或Control+Shift+C（Windows或Linux）。
- en: Open the Command Menu using Command-Shift-P (Macintosh) or Control+Shift+P (Windows
    or Linux) and type **`coverage`**.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令菜单，使用Command-Shift-P（Macintosh）或Control+Shift+P（Windows或Linux），然后输入**`coverage`**。
- en: Select **Show Coverage** and press Enter.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**显示覆盖率**并按Enter。
- en: Either click the **Record** button to interact with the page, or click the **Reload**
    button to record the coverage results related to a new page load.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要么点击**记录**按钮与页面进行交互，或者点击**重新加载**按钮记录与新页面加载相关的覆盖率结果。
- en: Click **Stop Instrumenting Coverage And Show Results** when you want to stop
    recording the results.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您想停止记录结果时，请点击**停止仪表覆盖并显示结果**。
- en: 'The results will display a report with the following information:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将显示包含以下信息的报告：
- en: File URL
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件URL
- en: File type
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件类型
- en: Total bytes
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总字节数
- en: Unused bytes
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未使用的字节数
- en: Usage visualization
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用可视化
- en: You can then use this information to aid in refactoring code to reduce the total
    amount of unused bytes on a page.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您随后可以使用此信息来辅助重构代码，以减少页面上未使用的字节总量。
- en: Discussion
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Viewing code usage is helpful for getting a sense of the percentage of unused
    JavaScript you are serving your users. The task of reducing this unused code is
    then often left to manual refactoring. However, a JavaScript bundling tool, such
    as Webpack, can also be used to split code into multiple bundles and perform “tree
    shaking” to automatically eliminate dead code. These methods are covered in [“JavaScript
    and the Mobile Web”](ch16.html#mobile-web).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 查看代码使用情况有助于了解您提供给用户的未使用JavaScript的百分比。然后，减少此未使用代码的任务通常留给手动重构。但是，JavaScript打包工具，如Webpack，也可以用于将代码拆分成多个包并执行“摇树”操作，自动消除死代码。这些方法在[“JavaScript与移动Web”](ch16.html#mobile-web)中有详细介绍。
- en: Using Lighthouse to Measure Best Practices
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Lighthouse衡量最佳实践
- en: Problem
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to measure your web application’s adherence to best practices.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望衡量您的Web应用程序遵循的最佳实践。
- en: Solution
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use Google’s Lighthouse tool, which is built into the Chrome Developer Tools
    ([Figure 11-5](#jscb_1206)).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用内置于Chrome开发者工具中的Google Lighthouse工具（参见[图11-5](#jscb_1206)）。
- en: Open Chrome’s Developer Tools using Command-Option-C (Macintosh) or Control+Shift+C
    (Windows or Linux).
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Command-Option-C（Macintosh）或Control+Shift+C（Windows或Linux）打开Chrome的开发者工具。
- en: Click the DevTools **Lighthouse** tab.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击DevTools **Lighthouse**选项卡。
- en: Select the categories you would like to profile and the device type (mobile
    or desktop).
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要分析的类别和设备类型（移动或桌面）。
- en: Click **Generate Report**.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**生成报告**。
- en: Lighthouse will then create a report, with a score for each category and specific
    recommendations for improvement.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Lighthouse随后将生成一份报告，每个类别都有得分，并针对改进提出具体建议。
- en: '![Google Lighthouse screenshot](assets/jsc3_1105.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![Google Lighthouse的截图](assets/jsc3_1105.png)'
- en: Figure 11-5\. The results of a Google Lighthouse report within Chrome’s Developer
    Tools
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-5\. 在Chrome的开发者工具中查看Google Lighthouse报告的结果
- en: Discussion
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'Lighthouse is an open source tool, created by Google, to measure the performance
    and best practices of a website. The tool is built into Chrome’s Developer Tools,
    but it can also be run as a standalone browser extension, a Node module, or from
    the command line. The Lighthouse report can be generated in a desktop or mobile
    view, allowing you to quickly get a sense of mobile performance. Lighthouse generates
    reports and recommendations for each of the following areas:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Lighthouse是由Google创建的开源工具，用于衡量网站的性能和最佳实践。该工具内置于Chrome的开发者工具中，但也可以作为独立的浏览器扩展、Node模块或从命令行运行。Lighthouse报告可在桌面或移动视图中生成，帮助您快速了解移动性能。Lighthouse生成以下各个领域的报告和建议：
- en: Performance
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能
- en: Progressive Web Application
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渐进式Web应用程序
- en: Best Practices
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最佳实践
- en: Accessibility
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可访问性
- en: SEO
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SEO
- en: The report output provides actionable feedback with specific problems, and links
    to documentation and recommended improvements. In [Figure 11-6](#jscb_1207), you
    can see performance recommendations for a profiled website, including removing
    unused JavaScript and reducing the impact of third-party code. Expanding each
    of these diagnostics will provide additional details and file specifics.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 报告输出提供具体问题的可操作反馈，并提供链接到文档和推荐的改进措施。在[图11-6](#jscb_1207)中，您可以看到对一个分析网站的性能建议，包括删除未使用的JavaScript和减少第三方代码的影响。展开每个诊断将提供额外的细节和文件具体信息。
- en: '![A screenshot of Lighthouse performance recommendations](assets/jsc3_1106.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Lighthouse性能建议的截图](assets/jsc3_1106.png)'
- en: Figure 11-6\. Lighthouse performance recommendations
  id: totrans-93
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-6\. Lighthouse性能建议
- en: Google’s Lighthouse is a useful tool for gauging the overall health and performance
    of the websites and applications that you develop. Accessing Lighthouse through
    the browser Developer Tools provides a quick and efficient way to profile a site
    during development. In addition to the developer tools user interface, the [open
    source](https://github.com/GoogleChrome/lighthouse) command-line tooling and Node
    module make it possible to build Lighthouse reports into continuous integration
    and delivery pipelines.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Google 的 Lighthouse 是一个有用的工具，用于评估您开发的网站和应用的整体健康和性能。通过浏览器开发者工具访问 Lighthouse 提供了一种快速高效的方式，在开发过程中对站点进行分析。除了开发者工具的用户界面外，[开源](https://github.com/GoogleChrome/lighthouse)
    的命令行工具和 Node 模块使得可以将 Lighthouse 报告集成到持续集成和交付流水线中。
