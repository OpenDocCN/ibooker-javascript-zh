- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'In the spring of 2016, I visited my old coworker Evan Martin at Google’s San
    Francisco office and asked him what he was excited about. I’d asked him this same
    question many times over the years because the answers were wide-ranging and unpredictable
    but always interesting: C++ build tools, Linux audio drivers, online crosswords,
    emacs plugins. This time, Evan was excited about TypeScript and Visual Studio
    Code.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 2016年春天，我访问了我在Google旧同事Evan Martin在旧金山办公室，并问他最近对什么感到兴奋。多年来，我问过他同样的问题很多次，因为答案多种多样且不可预测，但总是很有趣：C++构建工具、Linux音频驱动程序、在线填字游戏、emacs插件。这次，Evan对TypeScript和Visual
    Studio Code感到兴奋。
- en: I was surprised! I’d heard of TypeScript before, but I knew only that it was
    created by Microsoft and that I mistakenly believed it had something to do with
    .NET. As a lifelong Linux user, I couldn’t believe that Evan had hopped on team
    Microsoft.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我很惊讶！我以前听说过TypeScript，但我只知道它是由微软创建的，而且我错误地认为它与.NET有关。作为一名终身Linux用户，我无法相信Evan竟然加入了微软团队。
- en: Then Evan showed me vscode and the TypeScript playground and I was instantly
    converted. Everything was so fast, and the code intelligence made it easy to build
    a mental model of the type system. After years of writing type annotations in
    JSDoc comments for the Closure Compiler, this felt like typed JavaScript that
    really worked. And Microsoft had built a cross-platform text editor on top of
    Chromium? Perhaps this was a language and toolchain worth learning.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然后Evan向我展示了vscode和TypeScript playground，我立即被它们征服了。一切都如此迅速，代码智能使得建立类型系统的心理模型变得轻而易举。多年来，我在Closure
    Compiler的JSDoc注释中编写类型注解，而现在感觉就像是真正有效的带有类型的JavaScript。而且微软还基于Chromium构建了一个跨平台文本编辑器？也许这是一个值得学习的语言和工具链。
- en: I’d recently joined Sidewalk Labs and was writing our first JavaScript. The
    codebase was still small enough that Evan and I were able to convert it all to
    TypeScript over the next few days.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我最近加入了Sidewalk Labs，并开始编写我们的第一个JavaScript代码。代码库仍然很小，Evan和我能够在接下来的几天内将其全部转换为TypeScript。
- en: 'I’ve been hooked ever since. TypeScript is more than just a type system. It
    also brings a whole suite of language services which are fast and easy to use.
    The cumulative effect is that TypeScript doesn’t just make JavaScript development
    safer: it also makes it more fun!'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从那以后，我一直着迷。TypeScript不仅仅是一个类型系统，它还带来了一整套快速易用的语言服务。累积效应是，TypeScript不仅使JavaScript开发更加安全，而且更加有趣！
- en: Who This Book Is For
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合谁阅读
- en: The *Effective* books are intended to be the “standard second book” on their
    topic. You’ll get the most out of *Effective TypeScript* if you have some previous
    practical experience working with JavaScript and TypeScript. My goal with this
    book is not to teach you TypeScript or JavaScript but to help you advance from
    a beginning or intermediate user to an expert. The items in this book do this
    by helping you build mental models of how TypeScript and its ecosystem work, making
    you aware of pitfalls and traps to avoid, and by guiding you toward using TypeScript’s
    many capabilities in the most effective ways possible. Whereas a reference book
    will explain the five ways that a language lets you do X, an *Effective* book
    will tell you which of those five to use and why.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*Effective* 系列书籍旨在成为其领域的“标准第二本书”。如果你之前有一些实际使用JavaScript和TypeScript的经验，你将能够从
    *Effective TypeScript* 中获得最大的收益。我这本书的目标不是教你 TypeScript 或 JavaScript，而是帮助你从初级或中级用户进阶到专家级别。本书中的内容通过帮助你建立
    TypeScript 及其生态系统如何工作的心理模型，使你意识到应避免的陷阱和问题，并指导你以最有效的方式利用 TypeScript 的多种能力来实现这一目标。而参考书将解释一种语言允许你以五种方式执行
    X，*Effective* 书将告诉你应该选择其中哪一种以及为什么选择它。'
- en: TypeScript has evolved rapidly over the past few years, but my hope is that
    it has stabilized enough that the content in this book will remain valid for years
    to come. This book focuses primarily on the language itself, rather than any frameworks
    or build tools. You won’t find any examples of how to use React or Angular with
    TypeScript, or how to configure TypeScript to work with webpack, Babel, or Rollup.
    The advice in this book should be relevant to all TypeScript users.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 过去几年中，TypeScript已经快速发展，但我希望它已经足够稳定，以至于本书内容将在未来数年内仍然有效。本书主要关注语言本身，而不涉及任何框架或构建工具。你不会在本书中找到如何在TypeScript中使用React或Angular的示例，也不会找到如何配置TypeScript与webpack、Babel或Rollup配合使用的内容。本书的建议应该适用于所有TypeScript用户。
- en: Why I Wrote This Book
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我写这本书
- en: When I first started working at Google, I was given a copy of the third edition
    of *Effective C++*. It was unlike any other programming book I’d read. It made
    no attempt to be accessible to beginners or to be a complete guide to the language.
    Rather than telling you what the different features of C++ did, it told you how
    you should and should not use them. It did so through dozens of short, specific
    items motivated by concrete examples.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当我刚开始在谷歌工作时，我得到了第三版《Effective C++》的副本。这本书不像我读过的任何其他编程书籍。它没有试图对初学者友好，也没有试图成为语言的完全指南。它不是告诉你
    C++ 的不同特性是什么，而是告诉你如何使用它们以及不应该如何使用它们。它通过数十个短小的具体条目来做到这一点，每个条目都有具体的例子作为动机。
- en: The effect of reading all these examples while using the language daily was
    unmistakable. I’d used C++ before, but for the first time I felt comfortable with
    it and knew how to think about the choices it presented me. In later years I would
    have similar experiences reading *Effective Java* and *Effective JavaScript*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在日常使用语言时阅读所有这些示例的效果是明显的。我以前使用过 C++，但这是我第一次感到对它感到舒适，并知道如何思考它所提供的选择。后来的几年里，我读了《Effective
    Java》和《Effective JavaScript》时也有类似的经历。
- en: If you’re already comfortable working in a few different programming languages,
    then diving straight into the odd corners of a new one can be an effective way
    to challenge your mental models and learn what makes it different. I’ve learned
    an enormous amount about TypeScript from writing this book. I hope you’ll have
    the same experience reading it!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉在几种不同的编程语言中工作，那么直接深入到一种新语言的奇怪角落可能是挑战你思维模式并了解其不同之处的有效方法。从撰写本书中，我学到了大量有关
    TypeScript 的知识。希望你阅读本书时也能有同样的体验！
- en: How This Book Is Organized
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书的组织方式
- en: This book is a collection of “items,” each of which is a short technical essay
    that gives you specific advice about some aspect of TypeScript. The items are
    grouped thematically into chapters, but feel free to jump around and read whichever
    ones look most interesting to you.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是一系列“条目”，每篇都是一篇短小的技术文章，向您提供有关 TypeScript 某些方面的具体建议。这些条目按主题分组成章节，但请随意跳跃阅读您最感兴趣的部分。
- en: 'Each item’s title conveys the key takeaway. These are the things you should
    remember as you’re using TypeScript, so it’s worth skimming the table of contents
    to get them in your head. If you’re writing documentation, for example, and have
    a nagging sense that you shouldn’t be writing type information, then you’ll know
    to go read [Item 30: Don’t repeat type information in documentation](ch04.html#jsdoc-repeat).'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每个条目的标题都传达了关键的要点。当你使用 TypeScript 时，这些是你应该记住的东西，因此浏览目录以记住它们是值得的。例如，如果你正在撰写文档，并且有一种不应该写类型信息的感觉，那么你会知道去阅读
    [第30条：不要在文档中重复类型信息](ch04.html#jsdoc-repeat)。
- en: The text of the item motivates the advice in the title and backs it up with
    concrete examples and technical arguments. Almost every point made in this book
    is demonstrated through example code. I tend to read technical books by looking
    at the examples and skimming the prose, and I assume you do something similar.
    I hope you’ll read the prose and explanations! But the main points should still
    come across if you skim the examples.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每一项的文本都以标题的建议为动机，并通过具体例子和技术论证加以支持。这本书几乎每个观点都通过示例代码进行了演示。我倾向于通过查看示例和略读散文来阅读技术书籍，我想你也会做类似的事情。希望你能阅读散文和解释！但如果你只是略读示例，主要观点仍然应该能够传达。
- en: After reading the item, you should understand why it will help you use TypeScript
    more effectively. You’ll also know enough to understand if it doesn’t apply to
    your situation. Scott Meyers, the author of *Effective C++*, gives a memorable
    example of this. He met a team of engineers who wrote software that ran on missiles.
    They knew they could ignore his advice about preventing resource leaks, because
    their programs would always terminate when the missile hit the target and their
    hardware blew up. I’m not aware of any missiles with JavaScript runtimes, but
    the James Webb Space Telescope has one, so you never know!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完条目后，你应该理解为什么它会帮助你更有效地使用 TypeScript。你还会知道足够的信息来判断它是否适用于你的情况。《Effective C++》的作者斯科特·迈尔斯给出了一个令人难忘的例子。他遇到了一个团队的工程师，他们编写的软件在导弹上运行。他们知道可以忽略他关于防止资源泄漏的建议，因为他们的程序在导弹击中目标并且硬件爆炸时总会终止。我不知道有没有带有
    JavaScript 运行时的导弹，但詹姆斯·韦伯空间望远镜有一个，所以永远不知道！
- en: Finally, each item ends with “Things to Remember.” These are a few bullet points
    that summarize the item. If you’re skimming through, you can read these to get
    a sense for what the item is saying and whether you’d like to read more. You should
    still read the item! But the summary will do in a pinch.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，每个条目都以“Things to Remember”结束。这些是总结条目的几个要点。如果你在浏览中，可以阅读这些以了解条目的内容和是否希望进一步阅读。你仍然应该阅读条目！但总结在紧急情况下也足够了。
- en: Conventions in TypeScript Code Samples
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TypeScript 代码示例中的约定
- en: All code samples are TypeScript except where it’s clear from context that they
    are JSON, GraphQL, or some other language. Much of the experience of using TypeScript
    involves interacting with your editor, which presents some challenges in print.
    I’ve adopted a few conventions to make this work.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所有代码示例都是 TypeScript，除非从上下文中明确它们是 JSON、GraphQL 或其他语言。使用 TypeScript 的体验主要涉及与编辑器的交互，在印刷中会带来一些挑战。我采用了一些约定来解决这些问题。
- en: 'Most editors surface errors using squiggly underlines. To see the full error
    message, you hover over the underlined text. To indicate an error in a code sample,
    I put squiggles in a comment line under the place where the error occurs:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数编辑器使用波浪线下划线显示错误。要查看完整的错误消息，你可以悬停在下划线文本上。为了指示代码示例中的错误，我在发生错误的地方的注释行中放置波浪线：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I occasionally edit the error messages for clarity and brevity, but I never
    remove an error. If you copy/paste a code sample into your editor, you should
    get exactly the errors indicated, no more no less.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我偶尔会编辑错误消息以提高清晰度和简洁性，但我从不删除错误。如果你将代码示例复制/粘贴到编辑器中，你应该得到精确的错误指示，没有多余的也没有少了的。
- en: 'To draw attention to the lack of an error, I use `// OK`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了引起注意，我使用了 `// OK`：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You should be able to hover over a symbol in your editor to see what TypeScript
    considers its type. To indicate this in text, I use a comment starting with “type
    is”:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能够在编辑器中悬停在符号上查看 TypeScript 认为它的类型。为了在文本中表示这一点，我使用以“type is”开头的注释：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The type is for the first symbol on the line (`v` in this case) or for the
    result of a function call:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 类型用于行中的第一个符号（在本例中是`v`）或函数调用的结果：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This matches the type you’d see in your editor character for character. In the
    case of function calls you may need to assign to a temporary variable to see the
    type.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这与你的编辑器中看到的字符一致。对于函数调用，你可能需要赋值给临时变量以查看类型。
- en: 'I will occasionally introduce no-op statements to indicate the type of a variable
    on a specific line of code:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我偶尔会引入无操作语句来指示代码中特定行的变量类型：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `x;` lines are only there to demonstrate the type in each branch of the
    conditional. You don’t need to (and shouldn’t) include statements like this in
    your own code.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`x;`行仅用于展示条件分支中的类型。你不需要（也不应该）在自己的代码中包含这样的语句。'
- en: Unless it’s otherwise noted or clear from context, code samples are intended
    to be checked with the `--strict` flag. All samples were verified using TypeScript
    3.7.0-beta.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明或上下文明确，代码示例都应使用`--strict`标志进行检查。所有示例都经过 TypeScript 3.7.0-beta 的验证。
- en: Typographical Conventions Used in This Book
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书中使用的排版约定
- en: 'The following typographical conventions are used in this book:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本书中使用的排版约定：
- en: '*Italic*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*Italic*'
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 表示新术语、URL、电子邮件地址、文件名和文件扩展名。
- en: '`Constant width`'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`Constant width`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序清单，以及段落中引用程序元素，如变量或函数名称、数据库、数据类型、环境变量、语句和关键字。
- en: '**`Constant width bold`**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**`Constant width bold`**'
- en: Shows commands or other text that should be typed literally by the user.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用户应该按原样键入的命令或其他文本。
- en: '*`Constant width italic`*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*`Constant width italic`*'
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 显示应由用户提供值或由上下文确定值替换的文本。
- en: Tip
  id: totrans-45
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: This element signifies a tip or suggestion.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示提示或建议。
- en: Note
  id: totrans-47
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示一般注释。
- en: Warning
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This element indicates a warning or caution.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示警告或注意事项。
- en: Using Code Examples
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码示例
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://github.com/danvk/effective-typescript*](https://github.com/danvk/effective-typescript).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过[*https://github.com/danvk/effective-typescript*](https://github.com/danvk/effective-typescript)下载补充材料（代码示例、练习等）。
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有技术问题或在使用代码示例时遇到问题，请发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书旨在帮助您完成工作。一般而言，如果本书提供了示例代码，您可以在您的程序和文档中使用它。除非您复制了代码的大部分，否则无需联系我们以获取许可。例如，编写一个使用本书几个代码块的程序不需要许可。销售或分发O’Reilly书籍的示例则需要许可。通过引用本书并引用示例代码回答问题不需要许可。将本书的大量示例代码合并到产品文档中确实需要许可。
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Effective TypeScript*
    by Dan Vanderkam (O’Reilly). Copyright 2020 Dan Vanderkam, 978-1-492-05374-3.”'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感激，但通常不要求署名。署名通常包括标题、作者、出版商和ISBN。例如：“*Effective TypeScript* by Dan Vanderkam
    (O’Reilly). Copyright 2020 Dan Vanderkam, 978-1-492-05374-3.”
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您认为您对代码示例的使用超出了合理使用范围或上述许可，请随时通过[*permissions@oreilly.com*](mailto:permissions@oreilly.com)联系我们。
- en: O’Reilly Online Learning
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: O’Reilly在线学习
- en: Note
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 40多年来，[*O’Reilly Media*](http://oreilly.com) 提供技术和业务培训、知识和见解，帮助企业成功。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, conferences, and our online learning platform. O’Reilly’s
    online learning platform gives you on-demand access to live training courses,
    in-depth learning paths, interactive coding environments, and a vast collection
    of text and video from O’Reilly and 200+ other publishers. For more information,
    please visit [*http://oreilly.com*](http://oreilly.com).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过书籍、文章、会议以及我们的在线学习平台分享他们的知识和专长。O’Reilly的在线学习平台为您提供按需访问的实时培训课程、深度学习路径、交互式编码环境，以及来自O’Reilly和其他200多个出版商的大量文本和视频内容。更多信息，请访问[*http://oreilly.com*](http://oreilly.com).
- en: How to Contact Us
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 请将有关本书的评论和问题发送给出版商：
- en: O’Reilly Media, Inc.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O’Reilly Media, Inc.
- en: 1005 Gravenstein Highway North
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastopol, CA 95472
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938 (在美国或加拿大)
- en: 707-829-0515 (international or local)
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515 (国际或本地)
- en: 707-829-0104 (fax)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104 (传真)
- en: You can access the web page for this book, where we list errata, examples, and
    any additional information, at [*https://oreil.ly/Effective_TypeScript*](https://oreil.ly/Effective_TypeScript).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以访问此书的网页，我们在那里列出勘误、示例和任何额外信息，网址为[*https://oreil.ly/Effective_TypeScript*](https://oreil.ly/Effective_TypeScript).
- en: To comment or ask technical questions about this book, send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要对本书提出评论或提出技术问题，请发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
- en: For more information about our books, courses, conferences, and news, see our
    website at [*http://www.oreilly.com*](http://www.oreilly.com).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有关我们的书籍、课程、会议和新闻的更多信息，请查看我们的网站[*http://www.oreilly.com*](http://www.oreilly.com).
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在Facebook上找到我们：[*http://facebook.com/oreilly*](http://facebook.com/oreilly)
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter关注我们：[*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在YouTube上观看我们：[*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)
- en: Acknowledgments
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: There are many people who helped make this book possible. Thanks to Evan Martin
    for introducing me to TypeScript and showing me how to think about it. To Douwe
    Osinga for connecting me with O’Reilly and being supportive of the project. To
    Brett Slatkin for advice on structure and for showing me that someone I knew could
    write an *Effective* book. To Scott Meyers for coming up with this format and
    for his “Effective *Effective* Books” blog post, which provided essential guidance.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书能够问世，离不开许多帮助过我的人。感谢埃文·马丁（Evan Martin）介绍我认识 TypeScript 并教我如何思考它。感谢道威·奥辛加（Douwe
    Osinga）介绍我与 O'Reilly 的联系并对这个项目给予支持。感谢布雷特·斯拉特金（Brett Slatkin）在结构上的建议，并向我展示我认识的人也能写出一本*Effective*书籍。感谢斯科特·迈耶斯（Scott
    Meyers）提出这种格式，并感谢他的“Effective *Effective* Books”博客文章，为本书提供了重要指导。
- en: 'To my reviewers, Rick Battagline, Ryan Cavanaugh, Boris Cherny, Yakov Fain,
    Jesse Hallett, and Jason Killian. To all my coworkers at Sidewalk who learned
    TypeScript with me over the years. To everyone at O’Reilly who helped make this
    book happen: Angela Rufino, Jennifer Pollock, Deborah Baker, Nick Adams, and Jasmine
    Kwityn. To the TypeScript NYC crew, Jason, Orta, and Kirill, and to all the speakers.
    Many items were inspired by talks at the Meetup, as described in the following
    list:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢我的评审人员，里克·巴塔格林（Rick Battagline）、瑞安·卡瓦纳（Ryan Cavanaugh）、鲍里斯·切尔尼（Boris Cherny）、雅科夫·费恩（Yakov
    Fain）、杰西·哈莱特（Jesse Hallett）和杰森·基利安（Jason Killian）。感谢所有在 Sidewalk 和我一起多年学习 TypeScript
    的同事们。感谢所有帮助这本书问世的 O’Reilly 同事们：安吉拉·鲁菲诺（Angela Rufino）、詹妮弗·波洛克（Jennifer Pollock）、德博拉·贝克（Deborah
    Baker）、尼克·亚当斯（Nick Adams）和贾斯敏·奎特因（Jasmine Kwityn）。感谢 TypeScript 纽约市的全体成员，杰森、奥尔塔和基里尔，以及所有演讲者。许多条款灵感来自
    Meetup 上的演讲，如下所列：
- en: '[Item 3](ch01.html#independent) was inspired by a blog post of Evan Martin’s
    that I found particularly enlightening as I was first learning TypeScript.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第3条](ch01.html#independent)受到埃文·马丁（Evan Martin）的一篇博文的启发，我在初学 TypeScript 时觉得尤为启发。'
- en: '[Item 7](ch02_split_000.html#types-as-sets) was inspired by Anders’s talk about
    structural typing and `keyof` relationships at TSConf 2018, and by a talk of Jesse
    Hallett’s at the April 2019 TypeScript NYC Meetup.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第7条](ch02_split_000.html#types-as-sets)受安德斯（Anders）在 TSConf 2018 上关于结构类型和`keyof`关系的演讲以及杰西·哈莱特（Jesse
    Hallett）在2019年4月 TypeScript 纽约市 Meetup 上的演讲启发。'
- en: Both Basarat’s guide and helpful answers by DeeV and GPicazo on Stack Overflow
    were essential in writing [Item 9](ch02_split_000.html#prefer-declarations-to-assertions).
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 巴萨拉特（Basarat）的指南以及 Stack Overflow 上 DeeV 和 GPicazo 的有用回答对撰写[第9条](ch02_split_000.html#prefer-declarations-to-assertions)至关重要。
- en: '[Item 10](ch02_split_000.html#avoid-object-wrapper-types) builds on similar
    advice in Item 4 of *Effective JavaScript* (Addison-Wesley).'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第10条](ch02_split_000.html#avoid-object-wrapper-types)建立在《Effective JavaScript》（Addison-Wesley）第4条中类似的建议之上。'
- en: I was inspired to write [Item 11](ch02_split_001.html#excess-property-checking)
    by mass confusion around this topic at the August 2019 TypeScript NYC Meetup.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我受到2019年8月 TypeScript 纽约市 Meetup 上围绕这个主题的大量混淆启发，因此写下了[第11条](ch02_split_001.html#excess-property-checking)。
- en: '[Item 13](ch02_split_001.html#type-vs-interface) was greatly aided by several
    questions about `type` vs. `interface` on Stack Overflow. Jesse Hallett suggested
    the formulation around extensibility.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第13条](ch02_split_001.html#type-vs-interface)受 Stack Overflow 上关于`type` vs.
    `interface`的几个问题的极大帮助。杰西·哈莱特（Jesse Hallett）建议了关于可扩展性的表述方式。'
- en: Jacob Baskin provided encouragement and early feedback on [Item 14](ch02_split_001.html#map-between-types).
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雅各布·巴斯金（Jacob Baskin）在[第14条](ch02_split_001.html#map-between-types)的早期反馈和鼓励。
- en: '[Item 19](ch03.html#avoid-inferable) was inspired by several code samples submitted
    to the r/typescript subreddit.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第19条](ch03.html#avoid-inferable)受到提交到 r/typescript subreddit 的几个代码示例的启发。'
- en: '[Item 26](ch03.html#context-inference) is based on my own writing on Medium
    and a talk I gave at the October 2018 TypeScript NYC Meetup.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第26条](ch03.html#context-inference)基于我在 Medium 上的写作以及我在2018年10月 TypeScript
    纽约市 Meetup 上的演讲。'
- en: '[Item 28](ch04.html#valid-states) is based on common advice in Haskell (“make
    illegal states unrepresentable”). The Air France 447 story is inspired by Jeff
    Wise’s incredible 2011 article in *Popular Mechanics*.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第28条](ch04.html#valid-states)基于 Haskell 中的常见建议（“让非法状态不可表示”）。法国航空447航班的故事灵感来自杰夫·怀斯（Jeff
    Wise）2011年在《Popular Mechanics》发表的令人难以置信的文章。'
- en: '[Item 29](ch04.html#loose-accept-strict-produce) is based on an issue I ran
    into with the Mapbox type declarations. Jason Killian suggested the phrasing in
    the title.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第29条](ch04.html#loose-accept-strict-produce)基于我在 Mapbox 类型声明中遇到的问题。杰森·基利安（Jason
    Killian）建议了标题的措辞。'
- en: The advice about naming in [Item 36](ch04.html#language-of-domain) is common
    but this particular formulation was inspired by Dan North’s short article in *97
    Things Every Programmer Should Know* (O’Reilly).
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于命名的建议在[第36条](ch04.html#language-of-domain)中很常见，但这个特定的表述灵感来自丹·诺斯（Dan North）在《97
    Things Every Programmer Should Know》（O’Reilly）中的短文。
- en: '[Item 37](ch04.html#brands) was inspired by Jason Killian’s talk at the very
    first TypeScript NYC Meetup in September 2017.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第37条目](ch04.html#brands)受到Jason Killian在2017年9月第一个TypeScript NYC Meetup上的演讲的启发。'
- en: '[Item 41](ch05.html#evolving-any) is based on the TypeScript 2.1 release notes.
    The term “evolving any” is not widely used outside the TypeScript compiler itself,
    but I find it useful to have a name for this unusual pattern.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第41条目](ch05.html#evolving-any)基于TypeScript 2.1的发布说明。术语“evolving any”在TypeScript编译器之外并不广泛使用，但我觉得给这种不寻常的模式取个名字很有用。'
- en: '[Item 42](ch05.html#never-unknown) was inspired by a blog post of Jesse Hallett’s.
    [Item 43](ch05.html#type-safe-monkey) was greatly aided by feedback from Titian
    Cernicova Dragomir in TypeScript issue #33128.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第42条目](ch05.html#never-unknown)受到Jesse Hallett博客文章的启发。[第43条目](ch05.html#type-safe-monkey)得益于Titian
    Cernicova Dragomir在TypeScript问题#33128中的反馈。'
- en: '[Item 44](ch05.html#type-percentage) is based on York Yao’s work on the `type-coverage`
    tool. I wanted something like this and it existed!'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第44条目](ch05.html#type-percentage)基于York Yao对`type-coverage`工具的工作。我想要类似的东西，它已经存在了！'
- en: '[Item 46](ch06.html#three-versions) is based on a talk I gave at the December
    2017 TypeScript NYC Meetup.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第46条目](ch06.html#three-versions)基于我在2017年12月在TypeScript NYC Meetup上的演讲。'
- en: '[Item 50](ch06.html#conditional-overload) owes a debt of gratitude to David
    Sheldrick’s post on the *Artsy* blog on conditional types, which greatly demystified
    the topic for me.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第50条目](ch06.html#conditional-overload)深受David Sheldrick在*Artsy*博客上关于条件类型的文章的启发，这些文章极大地解开了我对该主题的困惑。'
- en: '[Item 51](ch06.html#mirror-types-for-deps) was inspired by a talk Steve Faulkner
    aka southpolesteve gave at the February 2019 Meetup.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第51条目](ch06.html#mirror-types-for-deps)受到Steve Faulkner（即southpolesteve）在2019年2月Meetup上的演讲的启发。'
- en: '[Item 52](ch06.html#test-your-types) is based on my own writing on Medium and
    work on the typings-checker tool, which eventually got folded into dtslint.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第52条目](ch06.html#test-your-types)基于我在Medium上的写作和typings-checker工具的工作，后来被整合到了dtslint中。'
- en: '[Item 53](ch07.html#avoid-non-ecma) was inspired/reinforced by Kat Busch’s
    Medium post on the various types of enums in TypeScript, as well as Boris Cherny’s
    writings on this topic in *Programming TypeScript* (O’Reilly).'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第53条目](ch07.html#avoid-non-ecma)受到Kat Busch在Medium上关于TypeScript各种枚举类型的帖子以及Boris
    Cherny在《Programming TypeScript》（O''Reilly）中关于该主题的写作的启发/强化。'
- en: '[Item 54](ch07.html#iterate-objects) was inspired by my own confusion and that
    of my coworkers on this topic. The definitive explanation is given by Anders on
    TypeScript PR #12253.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第54条目](ch07.html#iterate-objects)受到我和同事对这个主题的困惑的启发。Anders在TypeScript PR #12253中给出了最终的解释。'
- en: The MDN documentation was essential for writing [Item 55](ch07.html#understand-the-dom).
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写[第55条目](ch07.html#understand-the-dom)时，MDN文档对我至关重要。
- en: '[Item 56](ch07.html#private-rely) is loosely based on Item 35 of *Effective
    JavaScript* (Addison-Wesley).'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第56条目](ch07.html#private-rely)松散地基于《Effective JavaScript》（Addison-Wesley）的第35条目。'
- en: '[Chapter 8](ch08.html#ch-migrate) is based on my own experience migrating the
    aging dygraphs library.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html#ch-migrate)基于我迁移老化的dygraphs库的经验。'
- en: I found many of the blog posts and talks that led to this book through the excellent
    r/typescript subreddit. I’m particularly grateful to developers who provided code
    samples there which were essential for understanding common issues in beginner
    TypeScript. Thanks to Marius Schulz for the TypeScript Weekly newsletter. While
    it’s only occasionally weekly, it’s always an excellent source of material and
    a great way to keep up with TypeScript. To Anders, Daniel, Ryan, and the whole
    TypeScript team at Microsoft for the talks and all the feedback on issues. Most
    of my issues were misunderstandings, but there is nothing quite so satisfying
    as filing a bug and immediately seeing Anders Hejlsberg himself fix it! Finally,
    thanks to Alex for being so supportive during this project and so understanding
    of all the working vacations, mornings, evenings, and weekends I needed to complete
    it.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我找到了许多导致本书的博客文章和演讲，都来源于出色的r/typescript subreddit。我特别感谢在那里提供了代码示例的开发人员，这些示例对理解TypeScript初学者常见问题至关重要。感谢Marius
    Schulz提供的TypeScript Weekly通讯。虽然它偶尔才是每周的，但它始终是一个极好的资料来源，也是跟进TypeScript的好方法。感谢Anders、Daniel、Ryan以及Microsoft的整个TypeScript团队在演讲和所有问题反馈上的支持。我的大多数问题都是误解，但没有什么比提交一个bug然后立即看到Anders
    Hejlsberg本人修复它更令人满足！最后，感谢Alex在整个项目期间的支持和理解，包括我完成这个项目所需的所有工作假期、早晨、晚上和周末。
